name: Manual deploy TO cloudfront

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      environment:
        # Friendly description to be shown in the UI instead of 'name'
        description: '`production` or other deployment environment name'
        # Default value if no value is explicitly provided
        default: 'development'
        # Input has to be provided for the workflow to run
        required: true
      distributionId:
        description: 'Aws id of cloudfront distribution to deploy to'
        required: true

jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1.2.0

  extract:
    runs-on: ubuntu-latest
    steps:
      - run:
          echo github.event.payload.environment = ${{ github.event.inputs.name.environment }}
          echo github.event.deployment.environment = ${{ github.event.deployment.environment }}

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install and Test
      run: |
        yarn
        yarn test --ci
    - name: Build Production
      if: ${{ 'production' == github.event.inputs.name.environment }}
      run: yarn build --production

    - name: Build Development
      run: yarn build
      if:  ${{ 'production' != github.event.inputs.name.environment }}

    - name: Set AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Copy Built files up to S3
      run: |
        #ls -lR build
        cat src/App.js
        aws s3 cp --recursive --exclude \*.map build s3://www.humanyze.com/actions-test/
        echo "finished s3 uplaod"
        aws cloudfront create-invalidation --distribution-id ${{ github.event.input.distributionId }} --paths /index.html
    - name: Create Sentry Release
      uses: getsentry/action-release@v1.1.6
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: humanyze
        SENTRY_PROJECT: gh-actions-react
        SENTRY_LOG_LEVEL: info
      with:
        environment: ${{ github.event.inputs.name.environment }}
        sourcemaps: build/static/js build/static/css
